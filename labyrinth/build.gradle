apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'checkstyle'
apply plugin: 'jacoco'

sourceCompatibility = '11'
targetCompatibility = '11'
// [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'
    
// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = 'labyrinth.Labyrinth'
}

mainClassName = 'labyrinth.Labyrinth'

repositories {
    jcenter()
    //mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

dependencies {
    // TODO: Add dependencies here ...
    // You can read more about how to add dependency here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:how_to_declare_your_dependencies
    //testCompile group: 'junit', name: 'junit', version: '4.10'
    implementation 'com.google.guava:guava:27.0.1-jre'
    testImplementation 'junit:junit:4.12'
}

checkstyle {
	toolVersion "8.26"
}

run {
    standardInput = System.in
    standardOutput = System.out
}

jar {
  manifest {
    attributes(
      'Class-Path': configurations.compile.collect { it.getName() }.join(' '),
      'Main-Class': 'labyrinth.Labyrinth'
    )
  }
}
jacocoTestReport {
    reports {
        xml.enabled = true
        html.enabled = true
    }
        afterEvaluate {
        classDirectories.from = files(classDirectories.files.collect {
            fileTree(dir: it,
                    exclude: ['**/Labyrinth**'])
        })
    }
}
compileJava {
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}
check.dependsOn jacocoTestReport
